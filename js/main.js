/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ (function() {

eval("// sidebar\nconst menuItems = document.querySelectorAll('.menu-item');\n// messages \nconst messagesNotification = document.querySelector('#messages-notifications');\nconst messages = document.querySelector('.messages');\nconst message = messages.querySelectorAll('.message');\nconst messageSearch = document.querySelector('#message-search');\n// theme\nconst theme = document.querySelector('#theme');\nconst themeModal = document.querySelector('.customize-theme');\nconst fontSizes = document.querySelectorAll('.choose-size span')\nvar root = document.querySelector(':root');\nconst colorPalette = document.querySelectorAll('.choose-color span');\nconst Bg1 = document.querySelector('.bg-1');\nconst Bg2 = document.querySelector('.bg-2');\nconst Bg3 = document.querySelector('.bg-3');\n\n// remove active class from all menu items \nconst changeActiveItem = () => {\n    menuItems.forEach(item => {\n        item.classList.remove('active');\n    })\n}\n\nmenuItems.forEach(item => {\n    item.addEventListener('click', () => {\n        changeActiveItem();\n        item.classList.add('active');\n        if (item.id != 'notifications') {\n            document.querySelector('.notifications-popup').style.display = 'none';\n        } else {\n            document.querySelector('.notifications-popup').style.display = 'block';\n            document.querySelector('#notifications .notification-count').style.display = 'none';\n            \n        }\n    })\n})\n\n// Messages item menu \nconst searchMessage = () => {\n    const val = messageSearch.value.toLowerCase();\n    message.forEach(user => {\n        let name = user.querySelector('h5').textContent.toLowerCase();\n        if (name.indexOf(val) != -1) {\n            user.style.display = 'flex';\n        } else {\n            user.style.display = 'none'\n        }\n    })\n}\n\n// search chat messages \nmessageSearch.addEventListener('keyup', searchMessage);\n\n\n// checked item menu message \nmessagesNotification.addEventListener('click', () => {\n    messages.style.boxShadow = '0 0 1rem var(--primary-color)';\n    messagesNotification.querySelector('.notification-count').style.display = 'none';\n    setTimeout(() => {\n        messages.style.boxShadow = 'none';\n    }, 2000)\n})\n\n// theme customization\n// open modal popup theme item\nconst openThemeModal = () => {\n    themeModal.style.display = 'grid';\n}\n\n// closes modal \nconst closeThemeModal = (e) => {\n    if (e.target.classList.contains('customize-theme')) {\n        themeModal.style.display = 'none';\n    }\n}\n\n// close modal popup theme item\nthemeModal.addEventListener('click', closeThemeModal);\n\ntheme.addEventListener('click', openThemeModal);\n\n// fonst settings\n// remove class active by click on item of settings theme \nconst removeSizeSelector = () => {\n    fontSizes.forEach(size => {\n        size.classList.remove('active');\n    })\n}\n\nfontSizes.forEach(size => {\n    size.addEventListener('click', () => {\n        removeSizeSelector();\n        let fontSize;\n        size.classList.toggle('active');\n\n        if (size.classList.contains('font-size-1')) {\n            fontSize = '10px';\n            root.style.setProperty('----sticky-top-left', '5.4rem')\n            root.style.setProperty('----sticky-top-right', '5.4rem')\n        } else if (size.classList.contains('font-size-2')) {\n            fontSize = '13px';\n            root.style.setProperty('----sticky-top-left', '-2rem')\n            root.style.setProperty('----sticky-top-right', '-17rem')\n        } else if (size.classList.contains('font-size-3')) {\n            fontSize = '16px';\n            root.style.setProperty('----sticky-top-left', '5.4rem')\n            root.style.setProperty('----sticky-top-right', '5.4rem')\n        } else if (size.classList.contains('font-size-4')) {\n            fontSize = '19px';\n            root.style.setProperty('----sticky-top-left', '-5rem')\n            root.style.setProperty('----sticky-top-right', '-25rem')\n        } else if (size.classList.contains('font-size-5')) {\n            fontSize = '22px';\n            root.style.setProperty('----sticky-top-left', '-12rem')\n            root.style.setProperty('----sticky-top-right', '-35rem')\n        }\n\n        document.querySelector('html').style.fontSize = fontSize;\n    })\n    \n})\n\n\n\n// remove active class from colors item menu \nconst changeActiveColorClass = () => {\n    colorPalette.forEach(colorPicker => {\n        colorPicker.classList.remove('active');\n    })\n}\n\n// primary colors settings theme \ncolorPalette.forEach(color => {\n    color.addEventListener('click', () => {\n        let primary;\n        changeActiveColorClass();\n\n        if (color.classList.contains('color-1')) {\n            primaryHue = 252;\n        } else if (color.classList.contains('color-2')){\n            primaryHue = 52;\n        } else if (color.classList.contains('color-3')) {\n            primaryHue = 352;\n        } else if (color.classList.contains('color-4')) {\n            primaryHue = 152;\n        } else if (color.classList.contains('color-5')) {\n            primaryHue = 202;\n        }\n        color.classList.add('active');\n\n        root.style.setProperty('--primary-color-hue', primaryHue);\n    })\n})\n\n\n// theme bg colors \nlet lightColorLightness;\nlet darkColorLightness;\nlet whiteColorLightness;\n\n// changes bg color \nconst changeBG = () => {\n    root.style.setProperty('--light-color-lightness', lightColorLightness);\n    root.style.setProperty('--white-color-lightness', whiteColorLightness);\n    root.style.setProperty('--dark-color-lightness', darkColorLightness);\n}\n\nBg1.addEventListener('click', () => {\n\n    // add active class for item background \n    Bg1.classList.add('active');\n    // remove active class from item background \n    Bg2.classList.remove('active');\n    Bg3.classList.remove('active');\n    window.location.reload()\n})\n\nBg2.addEventListener('click', () => {\n    darkColorLightness = '95%';\n    whiteColorLightness = '20%';\n    lightColorLightness = '15%';\n\n    // add active class for item background \n    Bg2.classList.add('active');\n    // remove active class from item background \n    Bg1.classList.remove('active');\n    Bg3.classList.remove('active');\n    changeBG();\n})\n\nBg3.addEventListener('click', () => {\n    darkColorLightness = '95%';\n    whiteColorLightness = '10%';\n    lightColorLightness = '0%';\n\n    // add active class for item background \n    Bg3.classList.add('active');\n    // remove active class from item background \n    Bg1.classList.remove('active');\n    Bg2.classList.remove('active');\n    changeBG();\n})\n\n//# sourceURL=webpack://project/./src/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/main.js"]();
/******/ 	
/******/ })()
;